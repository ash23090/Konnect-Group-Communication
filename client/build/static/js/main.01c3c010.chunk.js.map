{"version":3,"sources":["socket.js","components/Main/Main.js","components/Video/VideoCard.js","components/BottomBar/BottomBar.js","components/Chat/Chat.js","components/Room/Room.js","App.js","serviceWorker.js","index.js"],"names":["sockets","io","MainContainer","styled","div","Row","Label","label","Input","input","Error","JoinButton","h1","button","Main","props","roomRef","useRef","userRef","useState","err","setErr","errMsg","setErrMsg","useEffect","socket","on","error","roomName","current","value","userName","sessionStorage","setItem","history","push","className","style","fontSize","marginBottom","color","htmlFor","type","id","ref","onClick","emit","roomId","Video","video","VideoCard","peer","stream","srcObject","track","playsInline","autoPlay","Bar","Left","Center","Right","ChatButton","ScreenButton","FaIcon","i","StopButton","CameraButton","SwitchMenu","SwitchList","BottomBar","clickChat","clickCameraDevice","goToBack","toggleCameraAudio","userVideoAudio","clickScreenSharing","screenShare","videoDevices","showVideoDevices","setShowVideoDevices","handleToggle","useCallback","e","state","data-switch","length","map","device","key","deviceId","data-value","audio","ChatContainer","TopHeader","ChatArea","MessageList","Message","UserMessage","BottomInput","Chat","display","currentUser","getItem","msg","setMsg","messagesEndRef","inputRef","sender","msgs","scrollToBottom","scrollIntoView","behavior","idx","float","clear","onKeyUp","target","placeholder","RoomContainer","VideoContainer","VideoAndBarContainer","MyVideo","VideoBox","UserName","Room","peers","setPeers","localUser","setUserVideoAudio","setVideoDevices","displayChat","setDisplayChat","setScreenShare","peersRef","userVideoRef","screenTrackRef","userStream","match","params","findPeer","find","p","peerID","createUserVideo","index","arr","expandScreen","hasOwnProperty","writeUserName","number","navigator","mediaDevices","enumerateDevices","then","devices","filtered","filter","kind","window","addEventListener","getUserMedia","users","forEach","userId","info","caller","Peer","initiator","trickle","signal","userToCall","from","destroy","createPeer","preList","incomingSignal","callerId","to","addPeer","answerId","peerIdx","user","switchTarget","disconnect","preventDefault","leaver","removeItem","location","href","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","muted","playInline","onended","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","stopPropagation","event","dataset","enabledAudio","getAudioTracks","enabled","newStreamTrack","oldStreamTrack","removeTrack","addTrack","getAttribute","videoSwitch","audioSwitch","getVideoTracks","userAudioTrack","AppContainer","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01c3c010.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n// const sockets = io('http://localhost:3001', { autoConnect: true, forceNew: true });\nconst sockets = io(\"/\");\nexport default sockets;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport socket from \"../../socket\";\n\nconst Main = (props) => {\n  const roomRef = useRef();\n  const userRef = useRef();\n  const [err, setErr] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"FE-error-user-exist\", ({ error }) => {\n      if (!error) {\n        const roomName = roomRef.current.value;\n        const userName = userRef.current.value;\n\n        sessionStorage.setItem(\"user\", userName);\n        props.history.push(`/room/${roomName}`);\n      } else {\n        setErr(error);\n        setErrMsg(\"User name already exist\");\n      }\n    });\n  }, [props.history]);\n\n  function clickJoin() {\n    const roomName = roomRef.current.value;\n    const userName = userRef.current.value;\n\n    if (!roomName || !userName) {\n      setErr(true);\n      setErrMsg(\"Enter Room Name or User Name\");\n    } else {\n      socket.emit(\"BE-check-user\", { roomId: roomName, userName });\n    }\n  }\n\n  return (\n    <>\n      <header>\n        <h1\n          className='title'\n          style={{ fontSize: \"60px\", marginBottom: \"50px\", color: \"cream\" }}\n        >\n          Konnect\n        </h1>\n        <h1\n          className='headerText'\n          style={{ fontSize: \"40px\", marginBottom: \"40px\" }}\n        >\n          Communicate without any hassle\n        </h1>\n      </header>\n      <MainContainer>\n        <Row>\n          <Label htmlFor='roomName'>\n            <h1>Room Name</h1>\n          </Label>\n          <Input type='text' id='roomName' ref={roomRef} />\n        </Row>\n        <Row>\n          <Label htmlFor='userName'>\n            <h1>User Name</h1>\n          </Label>\n          <Input type='text' id='userName' ref={userRef} />\n        </Row>\n        <JoinButton onClick={clickJoin}> Join </JoinButton>\n        {err ? <Error>{errMsg}</Error> : null}\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-top: 15px;\n  line-height: 35px;\n`;\n\nconst Label = styled.label``;\n\nconst Input = styled.input`\n  width: 150px;\n  height: 35px;\n  margin-left: 15px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n\n  :focus {\n    border: solid 3px #ffa260;\n    transform: scale(1.1);\n    box-shadow: 0 0.5em 0.5em -0.4em #ffa260;\n  }\n`;\n\nconst Error = styled.div`\n  margin-top: 10px;\n  font-size: 20px;\n  color: #e85a71;\n`;\n// eslint-disable-next-line\nconst h = styled.h1`\n  font-size: 500px;\n  font-weight: bold;\n`;\nconst JoinButton = styled.button`\n \n  font-size: 10px;\n  font-weight: 500; */\n  }\n  background:none;\n  color: #ffa260;\n  \n  \n  background-color: #000;\n  border: solid 2px #ffa260;\n  display: block;\n  margin: auto;\n  margin-top: 20%;\n  border-radius: 0.5em;\n  padding: 0.7em 2em;\n  font-size: 2em;\n  transition: all 0.05s;\n  :hover {\n    transform:scale(1.2);\n    box-shadow: 0 0.5em 0.5em -0.4em #ffa260;\n    cursor: pointer;\n    color: white;\n    border-color: #f1ff5c;\n    transform: translateY(-0.25em);\n  }\n`;\n\nexport default Main;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nconst VideoCard = (props) => {\n  const ref = useRef();\n  const peer = props.peer;\n\n  useEffect(() => {\n    peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n    peer.on(\"track\", (track, stream) => {});\n  }, [peer]);\n\n  return <Video playsInline autoPlay ref={ref} />;\n};\n\nconst Video = styled.video``;\n\nexport default VideoCard;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nconst BottomBar = ({\n  clickChat,\n  clickCameraDevice,\n  goToBack,\n  toggleCameraAudio,\n  userVideoAudio,\n  clickScreenSharing,\n  screenShare,\n  videoDevices,\n  showVideoDevices,\n  setShowVideoDevices,\n}) => {\n  const handleToggle = useCallback(\n    (e) => {\n      setShowVideoDevices((state) => !state);\n    },\n    [setShowVideoDevices]\n  );\n\n  return (\n    <Bar>\n      <Left>\n        <CameraButton onClick={toggleCameraAudio} data-switch='video'>\n          <div>\n            {userVideoAudio.video ? (\n              <FaIcon className='fas fa-video'></FaIcon>\n            ) : (\n              <FaIcon className='fas fa-video-slash'></FaIcon>\n            )}\n          </div>\n          Camera\n        </CameraButton>\n        {showVideoDevices && (\n          <SwitchList>\n            {videoDevices.length > 0 &&\n              videoDevices.map((device) => {\n                return (\n                  <div\n                    key={device.deviceId}\n                    onClick={clickCameraDevice}\n                    data-value={device.deviceId}\n                  >\n                    {device.label}\n                  </div>\n                );\n              })}\n            <div>Switch Camera</div>\n          </SwitchList>\n        )}\n        <SwitchMenu onClick={handleToggle}>\n          {/* <i className='fas fa-angle-up'></i> */}\n        </SwitchMenu>\n        <CameraButton onClick={toggleCameraAudio} data-switch='audio'>\n          <div>\n            {userVideoAudio.audio ? (\n              <FaIcon className='fas fa-microphone'></FaIcon>\n            ) : (\n              <FaIcon className='fas fa-microphone-slash'></FaIcon>\n            )}\n          </div>\n          Audio\n        </CameraButton>\n      </Left>\n      <Center>\n        <ChatButton onClick={clickChat}>\n          <div>\n            <FaIcon className='fas fa-comments'></FaIcon>\n          </div>\n          Chat\n        </ChatButton>\n        <ScreenButton onClick={clickScreenSharing}>\n          <div>\n            <FaIcon\n              className={`fas fa-desktop ${screenShare ? \"sharing\" : \"\"}`}\n            ></FaIcon>\n          </div>\n          Share Screen\n        </ScreenButton>\n      </Center>\n      <Right>\n        <StopButton onClick={goToBack}>Leave</StopButton>\n      </Right>\n    </Bar>\n  );\n};\n\nconst Bar = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 8%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  ${\"\" /* background-color: #9900cc; */}\n  background-color:teal;\n`;\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nconst Center = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Right = styled.div``;\n\nconst ChatButton = styled.div`\n  width: 75px;\n  border: none;\n  font-size: 0.9375rem;\n  padding: 5px;\n\n  :hover {\n    background-color: #9933ff;\n    cursor: pointer;\n    border-radius: 15px;\n  }\n\n  * {\n    pointer-events: none;\n  }\n`;\n\nconst ScreenButton = styled.div`\n  width: auto;\n  border: none;\n  font-size: 0.9375rem;\n  padding: 5px;\n\n  :hover {\n    background-color: #9933ff;\n    cursor: pointer;\n    border-radius: 15px;\n  }\n\n  .sharing {\n    color: #ee2560;\n  }\n`;\n\nconst FaIcon = styled.i`\n  width: 30px;\n  font-size: calc(16px);\n`;\n\nconst StopButton = styled.div`\n  width: 75px;\n  height: 30px;\n  border: none;\n  font-size: 0.9375rem;\n  line-height: 30px;\n  margin-right: 15px;\n  background-color: #ee2560;\n  border-radius: 15px;\n\n  :hover {\n    background-color: #f25483;\n    cursor: pointer;\n    transform: scale(1.1);\n  }\n`;\n\nconst CameraButton = styled.div`\n  position: relative;\n  width: 75px;\n  border: none;\n  font-size: 0.9375rem;\n  padding: 5px;\n\n  :hover {\n    background-color: #9933ff;\n    cursor: pointer;\n    border-radius: 15px;\n    transform: scale(1.1);\n  }\n\n  * {\n    pointer-events: none;\n  }\n\n  .fa-microphone-slash {\n    color: #ee2560;\n  }\n\n  .fa-video-slash {\n    color: #ee2560;\n  }\n`;\n\nconst SwitchMenu = styled.div`\n  display: flex;\n  position: absolute;\n  width: 20px;\n  top: 7px;\n  left: 80px;\n  z-index: 1;\n\n  :hover {\n    background-color: #9933ff;\n    cursor: pointer;\n    border-radius: 15px;\n  }\n\n  * {\n    pointer-events: none;\n  }\n\n  > i {\n    width: 90%;\n    font-size: calc(10px);\n  }\n`;\n\nconst SwitchList = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: -65.95px;\n  left: 80px;\n  background-color: #9933ff;\n  color: white;\n  padding-top: 5px;\n  padding-right: 10px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  text-align: left;\n\n  > div {\n    font-size: 0.85rem;\n    padding: 1px;\n    margin-bottom: 5px;\n\n    :not(:last-child):hover {\n      background-color: #77b7dd;\n      cursor: pointer;\n    }\n  }\n\n  > div:last-child {\n    border-top: 1px solid white;\n    cursor: context-menu !important;\n  }\n`;\n\nexport default BottomBar;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport socket from \"../../socket\";\n\nconst Chat = ({ display, roomId }) => {\n  const currentUser = sessionStorage.getItem(\"user\");\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef();\n  //if message is received use useState hook to append the array of msg using spread\n  useEffect(() => {\n    socket.on(\"FE-receive-message\", ({ msg, sender }) => {\n      setMsg((msgs) => [...msgs, { sender, msg }]);\n    });\n  }, []);\n\n  // Whenever any new message is received Scroll to Bottom of Message List\n  useEffect(() => {\n    scrollToBottom();\n  }, [msg]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  //sending message\n  const sendMessage = (e) => {\n    if (e.key === \"Enter\") {\n      const msg = e.target.value;\n      //if there is something in the message then emit it\n      if (msg) {\n        socket.emit(\"BE-send-message\", { roomId, msg, sender: currentUser });\n        inputRef.current.value = \"\";\n      }\n    }\n  };\n\n  return (\n    <ChatContainer className={display ? \"\" : \"width0\"}>\n      <TopHeader>Group Chat</TopHeader>\n      <ChatArea>\n        <MessageList>\n          {msg &&\n            msg.map(({ sender, msg }, idx) => {\n              //as we will show our message in different color then the message we receive from\n              //other users\n              if (sender !== currentUser) {\n                return (\n                  <Message key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </Message>\n                );\n              } else {\n                return (\n                  <UserMessage key={idx}>\n                    <strong>{sender}</strong>\n                    <p>{msg}</p>\n                  </UserMessage>\n                );\n              }\n            })}\n          <div style={{ float: \"left\", clear: \"both\" }} ref={messagesEndRef} />\n        </MessageList>\n      </ChatArea>\n      <BottomInput\n        ref={inputRef}\n        onKeyUp={sendMessage}\n        placeholder='Enter your message'\n      />\n    </ChatContainer>\n  );\n};\n\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 25%;\n  height: 100%;\n  background-color: teal;\n  transition: all 0.2s ease;\n  overflow: hidden;\n`;\n\nconst TopHeader = styled.div`\n  width: 100%;\n  margin-top: 15px;\n  font-weight: 600;\n  font-size: 20px;\n  color: white;\n`;\n\nconst ChatArea = styled.div`\n  width: 100%;\n  height: 87.5vh;\n  max-height: 83%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst MessageList = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 15px;\n  color: #252525;\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-left: 15px;\n  text-align: left;\n\n  > strong {\n    margin-left: 3px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    box-shadow: 0px 0px 3px #4ea1d3;\n    font-size: 14px;\n    background-color: blue;\n    color: white;\n  }\n`;\n\nconst UserMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n  font-size: 16px;\n  margin-top: 15px;\n  text-align: right;\n\n  > strong {\n    margin-right: 35px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    margin-right: 30px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    background-color: purple;\n    color: white;\n    font-size: 14px;\n    text-align: left;\n  }\n`;\n\nconst BottomInput = styled.input`\n  bottom: 0;\n  width: 100%;\n  height: 8%;\n  padding: 20px;\n  border-top: 1px solid purple;\n  box-sizing: border-box;\n  opacity: 0.7;\n\n  :focus {\n    outline: none;\n    transform: scale(1.1);\n  }\n`;\n\nexport default Chat;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport socket from \"../../socket\";\nimport VideoCard from \"../Video/VideoCard\";\nimport BottomBar from \"../BottomBar/BottomBar\";\nimport Chat from \"../Chat/Chat\";\n\nconst Room = (props) => {\n  const currentUser = sessionStorage.getItem(\"user\");\n  const [peers, setPeers] = useState([]);\n  const [userVideoAudio, setUserVideoAudio] = useState({\n    localUser: { video: true, audio: true },\n  });\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [displayChat, setDisplayChat] = useState(false);\n  const [screenShare, setScreenShare] = useState(false);\n  const [showVideoDevices, setShowVideoDevices] = useState(false);\n  const peersRef = useRef([]);\n  const userVideoRef = useRef();\n  const screenTrackRef = useRef();\n  const userStream = useRef();\n  const roomId = props.match.params.roomId;\n\n  useEffect(() => {\n    // Get Video Devices\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const filtered = devices.filter((device) => device.kind === \"videoinput\");\n      setVideoDevices(filtered);\n    });\n\n    // Set Leave Button Event\n    window.addEventListener(\"popstate\", goToBack);\n\n    // Connect Camera & Mic\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideoRef.current.srcObject = stream;\n        userStream.current = stream;\n\n        socket.emit(\"BE-join-room\", { roomId, userName: currentUser });\n        socket.on(\"FE-user-join\", (users) => {\n          // all users\n          const peers = [];\n          users.forEach(({ userId, info }) => {\n            let { userName, video, audio } = info;\n\n            if (userName !== currentUser) {\n              const peer = createPeer(userId, socket.id, stream);\n\n              peer.userName = userName;\n              peer.peerID = userId;\n\n              peersRef.current.push({\n                peerID: userId,\n                peer,\n                userName,\n              });\n              peers.push(peer);\n\n              setUserVideoAudio((preList) => {\n                return {\n                  ...preList,\n                  [peer.userName]: { video, audio },\n                };\n              });\n            }\n          });\n\n          setPeers(peers);\n        });\n        //if receive call\n        socket.on(\"FE-receive-call\", ({ signal, from, info }) => {\n          let { userName, video, audio } = info;\n          const peerIdx = findPeer(from);\n\n          if (!peerIdx) {\n            const peer = addPeer(signal, from, stream);\n\n            peer.userName = userName;\n\n            peersRef.current.push({\n              peerID: from,\n              peer,\n              userName: userName,\n            });\n            setPeers((users) => {\n              return [...users, peer];\n            });\n            setUserVideoAudio((preList) => {\n              return {\n                ...preList,\n                [peer.userName]: { video, audio },\n              };\n            });\n          }\n        });\n        //if call is accepted\n        socket.on(\"FE-call-accepted\", ({ signal, answerId }) => {\n          const peerIdx = findPeer(answerId);\n          peerIdx.peer.signal(signal);\n        });\n        //if user leaves\n        socket.on(\"FE-user-leave\", ({ userId, userName }) => {\n          const peerIdx = findPeer(userId);\n          peerIdx.peer.destroy();\n          setPeers((users) => {\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\n            return [...users];\n          });\n          peersRef.current = peersRef.current.filter(\n            ({ peerID }) => peerID !== userId\n          );\n        });\n      });\n    //if camera is switched on\n    socket.on(\"FE-toggle-camera\", ({ userId, switchTarget }) => {\n      const peerIdx = findPeer(userId);\n\n      setUserVideoAudio((preList) => {\n        let video = preList[peerIdx.userName].video;\n        let audio = preList[peerIdx.userName].audio;\n\n        if (switchTarget === \"video\") video = !video;\n        else audio = !audio;\n\n        return {\n          ...preList,\n          [peerIdx.userName]: { video, audio },\n        };\n      });\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, []);\n  //function for creating peer\n  function createPeer(userId, caller, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"BE-call-user\", {\n        userToCall: userId,\n        from: caller,\n        signal,\n      });\n    });\n    peer.on(\"disconnect\", () => {\n      peer.destroy();\n    });\n\n    return peer;\n  }\n  //function for adding peer\n  function addPeer(incomingSignal, callerId, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"BE-accept-call\", { signal, to: callerId });\n    });\n\n    peer.on(\"disconnect\", () => {\n      peer.destroy();\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function findPeer(id) {\n    return peersRef.current.find((p) => p.peerID === id);\n  }\n\n  function createUserVideo(peer, index, arr) {\n    return (\n      <VideoBox\n        className={`width-peer${peers.length > 8 ? \"\" : peers.length}`}\n        onClick={expandScreen}\n        key={index}\n      >\n        {writeUserName(peer.userName)}\n        <FaIcon className='fas fa-expand' />\n        <VideoCard key={index} peer={peer} number={arr.length} />\n      </VideoBox>\n    );\n  }\n  //checks if the uservideoaudio has a property of user if not\n  function writeUserName(userName, index) {\n    if (userVideoAudio.hasOwnProperty(userName)) {\n      if (!userVideoAudio[userName].video) {\n        return <UserName key={userName}>{userName}</UserName>;\n      }\n    }\n  }\n\n  // Open Chat\n  const clickChat = (e) => {\n    e.stopPropagation();\n    setDisplayChat(!displayChat);\n  };\n\n  // BackButton\n  const goToBack = (e) => {\n    e.preventDefault();\n    socket.emit(\"BE-leave-room\", { roomId, leaver: currentUser });\n    sessionStorage.removeItem(\"user\");\n    window.location.href = \"/\";\n  };\n  //toggling audio\n  const toggleCameraAudio = (e) => {\n    const target = e.target.getAttribute(\"data-switch\");\n\n    setUserVideoAudio((preList) => {\n      let videoSwitch = preList[\"localUser\"].video;\n      let audioSwitch = preList[\"localUser\"].audio;\n\n      if (target === \"video\") {\n        const userVideoTrack =\n          userVideoRef.current.srcObject.getVideoTracks()[0];\n        videoSwitch = !videoSwitch;\n        userVideoTrack.enabled = videoSwitch;\n      } else {\n        const userAudioTrack =\n          userVideoRef.current.srcObject.getAudioTracks()[0];\n        audioSwitch = !audioSwitch;\n\n        if (userAudioTrack) {\n          userAudioTrack.enabled = audioSwitch;\n        } else {\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\n        }\n      }\n\n      return {\n        ...preList,\n        localUser: { video: videoSwitch, audio: audioSwitch },\n      };\n    });\n\n    socket.emit(\"BE-toggle-camera-audio\", { roomId, switchTarget: target });\n  };\n  //screen share\n  const clickScreenSharing = () => {\n    if (!screenShare) {\n      navigator.mediaDevices\n        .getDisplayMedia({ cursor: true })\n        .then((stream) => {\n          const screenTrack = stream.getTracks()[0];\n\n          peersRef.current.forEach(({ peer }) => {\n            // replaceTrack (oldTrack, newTrack, oldStream);\n            peer.replaceTrack(\n              peer.streams[0]\n                .getTracks()\n                .find((track) => track.kind === \"video\"),\n              screenTrack,\n              userStream.current\n            );\n          });\n\n          // Listen click end\n          screenTrack.onended = () => {\n            peersRef.current.forEach(({ peer }) => {\n              peer.replaceTrack(\n                screenTrack,\n                peer.streams[0]\n                  .getTracks()\n                  .find((track) => track.kind === \"video\"),\n                userStream.current\n              );\n            });\n            userVideoRef.current.srcObject = userStream.current;\n            setScreenShare(false);\n          };\n\n          userVideoRef.current.srcObject = stream;\n          screenTrackRef.current = screenTrack;\n          setScreenShare(true);\n        });\n    } else {\n      screenTrackRef.current.onended();\n    }\n  };\n  //expand screen\n  const expandScreen = (e) => {\n    const elem = e.target;\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* for Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* for Chrome, Safari & Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  };\n\n  const clickBackground = () => {\n    if (!showVideoDevices) return;\n\n    setShowVideoDevices(false);\n  };\n\n  const clickCameraDevice = (event) => {\n    if (\n      event &&\n      event.target &&\n      event.target.dataset &&\n      event.target.dataset.value\n    ) {\n      const deviceId = event.target.dataset.value;\n      const enabledAudio =\n        userVideoRef.current.srcObject.getAudioTracks()[0].enabled;\n\n      navigator.mediaDevices\n        .getUserMedia({ video: { deviceId }, audio: enabledAudio })\n        .then((stream) => {\n          const newStreamTrack = stream\n            .getTracks()\n            .find((track) => track.kind === \"video\");\n          const oldStreamTrack = userStream.current\n            .getTracks()\n            .find((track) => track.kind === \"video\");\n\n          userStream.current.removeTrack(oldStreamTrack);\n          userStream.current.addTrack(newStreamTrack);\n\n          peersRef.current.forEach(({ peer }) => {\n            // replaceTrack (oldTrack, newTrack, oldStream);\n            peer.replaceTrack(\n              oldStreamTrack,\n              newStreamTrack,\n              userStream.current\n            );\n          });\n        });\n    }\n  };\n\n  return (\n    <RoomContainer onClick={clickBackground}>\n      <VideoAndBarContainer>\n        <VideoContainer>\n          {/* Current User Video */}\n          <VideoBox\n            className={`width-peer${peers.length > 8 ? \"\" : peers.length}`}\n          >\n            {userVideoAudio[\"localUser\"].video ? null : (\n              <UserName>{currentUser}</UserName>\n            )}\n            <FaIcon className='fas fa-expand' />\n            <MyVideo\n              onClick={expandScreen}\n              ref={userVideoRef}\n              muted\n              autoPlay\n              playInline\n            ></MyVideo>\n          </VideoBox>\n          {/* Joined User Video */}\n          {peers &&\n            peers.map((peer, index, arr) => createUserVideo(peer, index, arr))}\n        </VideoContainer>\n        <BottomBar\n          clickScreenSharing={clickScreenSharing}\n          clickChat={clickChat}\n          clickCameraDevice={clickCameraDevice}\n          goToBack={goToBack}\n          toggleCameraAudio={toggleCameraAudio}\n          userVideoAudio={userVideoAudio[\"localUser\"]}\n          screenShare={screenShare}\n          videoDevices={videoDevices}\n          showVideoDevices={showVideoDevices}\n          setShowVideoDevices={setShowVideoDevices}\n        />\n      </VideoAndBarContainer>\n      <Chat display={displayChat} roomId={roomId} />\n    </RoomContainer>\n  );\n};\n//styles\nconst RoomContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-height: 100vh;\n  flex-direction: row;\n`;\n\nconst VideoContainer = styled.div`\n  max-width: 100%;\n  height: 92%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px;\n  box-sizing: border-box;\n  gap: 10px;\n`;\n\nconst VideoAndBarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst MyVideo = styled.video`\n  width: 20vw;\n  height: 20vh;\n`;\n\nconst VideoBox = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > video {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  :hover {\n    > i {\n      display: block;\n    }\n  }\n`;\n\nconst UserName = styled.div`\n  position: absolute;\n  font-size: calc(20px);\n  z-index: 1;\n`;\n\nconst FaIcon = styled.i`\n  display: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\n\nexport default Room;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Main from \"./components/Main/Main\";\nimport Room from \"./components/Room/Room\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppContainer>\n        <Switch>\n          <Route exact path='/' component={Main} />\n          <Route exact path='/room/:roomId' component={Room} />\n        </Switch>\n      </AppContainer>\n    </BrowserRouter>\n  );\n}\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(8px);\n  color: white;\n  background-color: #252525;\n  text-align: center;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}